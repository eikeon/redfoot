<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rdf:RDF [
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#">
  <!ENTITY rdfe "http://redfoot.net/rdf#">
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#">
  <!ENTITY code "http://redfoot.net/hypercode/code#">
  <!ENTITY command "http://redfoot.net/hypercode/command#">
]>
<rdf:RDF
   xmlns:rdf="&rdf;"
   xmlns:rdfs="&rdfs;"
   xmlns:rdfe="&rdfe;"
   xmlns:code="&code;"
   xmlns:command="&command;"
   xmlns:kernel="http://redfoot.net/hypercode/kernel#"
>

  <rdfe:Namespace rdf:about="#">
    <rdfs:label>Redfoot Command</rdfs:label>
    <rdfs:comment>The Redfoot Command Namespace.</rdfs:comment>
  </rdfe:Namespace>

  <rdfs:Class rdf:ID="Command">
    <rdfs:label>Command</rdfs:label>
    <rdfs:comment>...</rdfs:comment>
    <rdfs:subClassOf rdf:resource="&code;Python"/>
  </rdfs:Class>

  <kernel:Program rdf:ID="runner">
    <rdfs:label>Command Runner</rdfs:label>
    <rdfs:seeAlso rdf:resource="../hypercode/commands/manage#"/>
    <rdfs:seeAlso rdf:resource="../hypercode/commands/static#"/>
    <rdf:value rdf:datatype="http://redfoot.net/2005/redfoot#Python">
<![CDATA[

import logging

_logger = logging.getLogger(__uri__)

CODE = redfoot.namespace(URIRef("http://redfoot.net/hypercode/code#"))

COMMAND = redfoot.namespace(URIRef("#", base=__uri__))
# vs.
#COMMAND = redfoot.namespace(URIRef("http://redfoot.net/hypercode/command#"))


commands = {}

for command in redfoot.instances(COMMAND.Command):
    redfoot.check(command)
    label = redfoot.label(command)
    commands[label] = command

# TODO: command line parsing and usage
if not args:
    args = [""]

command = args[0]

# find code object by label or full URIRef
code = commands.get(command, URIRef(command))
if code:
    redfoot.execute(code, stdout=redfoot, stderr=redfoot, args=args[1:])
else:
    if command:
        redfoot.write("Command '%s' not found.\n" % command)
    command_list = commands.keys()
    command_list.sort()
    redfoot.write("available commands: \n    %s\n" % ", ".join(command_list))

]]>
    </rdf:value>
  </kernel:Program>

  <command:Command rdf:ID="load">
    <rdfs:label>load</rdfs:label>
    <rdf:value rdf:datatype="&xsd;string">
<![CDATA[

if len(args)==0 or len(args)>3:
    print "usage: ./redfoot.py load <uri> [<publicID>]"
else:
    import os
    from urllib import pathname2url
    from urlparse import urljoin
    url = URIRef(args[0], base="%s/" % urljoin("file:", pathname2url(os.getcwd())))
    try:
        publicID = URIRef(redfoot.absolutize(args[1], defrag=False))
    except:
        publicID = None
    print "loading: %s" % url
    if publicID:
        print " with publicID: %s" % publicID
    redfoot.load(url, publicID=publicID, creator=__uri__)

]]>
    </rdf:value>
  </command:Command>

</rdf:RDF>
