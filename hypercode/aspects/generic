<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
   xmlns:rdfe="http://redfoot.net/rdf#"
   xmlns:redfoot='http://redfoot.net/2005/redfoot#'
   xmlns:server="http://redfoot.net/2005/server#"
   xmlns:template='http://redfoot.net/2005/template#'
   xmlns:aspect="http://redfoot.net/hypercode/aspect#"
>

  <rdfe:RDFXMLDocument rdf:about="">
  </rdfe:RDFXMLDocument>
  
  <aspect:Aspect rdf:ID="aspect">
    <rdfs:label>Editor (Generic)</rdfs:label>
    <aspect:item rdf:resource="#edit_page"/>
    <aspect:item rdf:resource="#edit_resource_page"/>
    <aspect:item rdf:resource="#edit_triple_page"/>
    <aspect:item rdf:resource="#create_page"/>
  </aspect:Aspect>

  <template:Section rdf:ID="edit_page">
    <aspect:location>/edit/</aspect:location>
    <rdfs:label>Edit</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <template:content rdf:resource="#add_resource"/>
    <template:default_section_rank>70.0</template:default_section_rank>    
    <rdfs:member rdf:resource="http://redfoot.net/2005/comment#exclude"/>    
    <server:allow rdf:resource="#Admin"/>
  </template:Section>

  <server:Page rdf:ID="edit_resource_page">
    <aspect:location>/edit/resource</aspect:location>
    <rdfs:label>Edit Resource</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <template:content rdf:resource="#edit_resource"/>
    <rdfs:member rdf:resource="http://redfoot.net/2005/comment#exclude"/>
    <server:allow rdf:resource="#Admin"/>
  </server:Page>

  <server:Page rdf:ID="edit_triple_page">
    <aspect:location>/edit/triple</aspect:location>
    <rdfs:label>View Triple</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <template:content rdf:resource="#edit_triple"/>
    <rdfs:member rdf:resource="http://redfoot.net/2005/comment#exclude"/>
    <server:allow rdf:resource="#Admin"/>
  </server:Page>

  <rdf:Description rdf:ID="create_page"> <!-- TODO: incorporate into generic-->
    <aspect:location>/create/</aspect:location>
    <rdfs:label>Create Instance</rdfs:label>
    <server:allow rdf:resource="#Admin"/>
    <server:page_handler>
      <server:PageHandler rdf:ID="create">
        <server:content_type>application/xhtml+xml</server:content_type>
        <rdf:value rdf:datatype="http://redfoot.net/2005/redfoot#Python"><![CDATA[

from time import gmtime
from urllib import quote

type = URIRef(request.parameters.get("type"))

if type:
    # 2005/04/06/09:45:22/
    year, month, date, h, m, s, _, _, _ = gmtime()
    name = "%04d/%02d/%02d/%02d:%02d:%02d" % (year, month, date, h, m, s)

    uri = URIRef("%s/document/%s" % (request.host, name))
    instance = URIRef("%s#" % uri)

    context = redfoot.get_context(redfoot.context_id(uri))
    context.add((instance, RDF.type, type))
    context.add((instance, RDFS.label, Literal("")))

    location = "%s/edit/resource?uri=%s" % (request.host, quote(instance))

    response.setStatus(302, 'found')
    response.setHeader('Location', location)
else:
    pass # TODO: bad request

      ]]></rdf:value>
      </server:PageHandler>
    </server:page_handler>
    <rdfs:member rdf:resource="http://redfoot.net/2005/comment#exclude"/>    
  </rdf:Description>


  <redfoot:Python rdf:ID="add_resource">
    <rdf:value rdf:datatype="http://redfoot.net/2005/server#Kid">
<![CDATA[
<div xmlns:kid="http://purl.org/kid/ns#" kid:strip="">
  <form name="edit_form" action="resource" method="get">
    <table class="generic">
      <tr>
        <td valign="top">uri</td>
        <td>
          <input type="text" size="60" name="uri"/>
        </td>
      </tr>
     </table>
    <p>NOTE: Leave blank to create an anonymous resource.</p>
    <input type="submit" value="add"/>
  </form>
</div>
]]>               
    </rdf:value>
  </redfoot:Python>




  <redfoot:Python rdf:ID="edit_resource">
    <rdf:value rdf:datatype="http://redfoot.net/2005/server#Kid">
<![CDATA[
<div xmlns:kid="http://purl.org/kid/ns#" kid:strip="">
<?python
from urllib import quote
from rdflib.util import from_n3

uri = request.parameters.get("uri", None)
if uri:
    subject = URIRef(uri)
else:
    subject = from_n3(request.parameters.get("subject"), None)
if not subject:
    subject = BNode()

processor = request.parameters.get("processor", None)
if processor=="delete":
    if subject:
        redfoot.remove((subject, None, None))
    else:
        print "WARNING: delete with no subject"
?>    
  <table class="generic">
      <caption>Subject: 
	<a kid:if="isinstance(subject, URIRef)" href="${request.relative(subject.concrete())}">${subject}</a>
	<span kid:strip="" kid:if="not isinstance(subject, URIRef)">${subject}</span>
      </caption>
      <tr>
	<th>Predicate</th>
	<th>Object</th>    
      </tr>  
      <tr kid:if="(subject, None, None) not in redfoot">
	<td>Resource not known of directly</td>     
      </tr>
      <tr kid:for="s, p, o in redfoot.triples((subject, None, None))">
	<td>
<!--${display(URIRef("#view_node", base=redfoot_current), node=p)}-->
  <pre kid:if="isinstance(p, Literal)">
<?python
if len(p)>40:
    ss = p[0:20]+"..."
else:
    ss = p
if p.language:
    ss += ("-%s" % p.language)    
?>
  ${ss}
  </pre>
  <a kid:if="not isinstance(p, Literal)"
     href="resource?subject=${quote(p.n3())}" 
     title="${redfoot.comment(p)}">
    ${redfoot.label(p, p)}
  </a>
	</td>
	<td style="width: 30em">
<!--${display(URIRef("#view_node", base=redfoot_current), node=o)}-->
  <pre kid:if="isinstance(o, Literal)">
<?python
if len(o)>40:
    ss = o[0:20]+"..."
else:
    ss = o
if o.language:
    ss += ("-%s" % o.language)    
?>
  ${ss} 
  </pre>
  <a kid:if="not isinstance(o, Literal)"
     href="resource?subject=${quote(o.n3())}" 
     title="${redfoot.comment(o)}">${redfoot.label(o, o)}</a>
	</td>
	<td>
	  <form name="edit_triple_form" action="triple" method="POST">
	    <input name="subject" type="hidden" value="${s.n3()}"/>
	    <input name="predicate" type="hidden" value="${p.n3()}"/>
	    <input name="object" type="hidden" value="${o.n3()}"/>
            <input kid:if="isinstance(o, Literal)"
                   name="datatype" type="hidden" value="${o.datatype}"/>
	    <input type="submit" value="edit"/>                       
	  </form>
	</td>
      </tr>
  </table>

  <form name="edit_form" method="post">
    <input type="button" value="Add Property" onclick="edit_form.action='triple'; edit_form.submit()"/>
    <input type="hidden" name="subject" value="${subject.n3()}"/>
    <input type="hidden" name="processor"/>
    <input type="hidden" name="copy" value=""/>  
    <input disabled="true" type="button" value="Copy"
           onclick="edit_form.copy.value='true'; edit_form.action='resource'; edit_form.submit()"/>
           <!-- the onclick is being used to... -->
    <input type="button" value="Delete" onclick="edit_form.processor.value='delete'; edit_form.submit()"/>  
  </form>
</div>
]]>               
    </rdf:value>
  </redfoot:Python>




  <redfoot:Python rdf:ID="edit_triple">
    <rdf:value rdf:datatype="http://redfoot.net/2005/server#Kid">
<![CDATA[
<div xmlns:kid="http://purl.org/kid/ns#" kid:strip="">
<?python
from rdflib.util import from_n3

SESSION = redfoot.namespace("http://redfoot.net/2005/session#")

subject = from_n3(request.parameters.get("subject"))
predicate = from_n3(request.parameters.get("predicate"))
object = from_n3(request.parameters.get("object", None), None)
datatype = request.parameters.get("datatype") or None
if datatype:
    datatype = URIRef(datatype)
if object and datatype and isinstance(object, Literal):
    object.datatype = datatype
if object is None:
    o = request.parameters.get("object_literal") or ""
    object = Literal(o, datatype=datatype)
object_orig = from_n3(request.parameters.get("object_orig", None), None)
if object_orig and isinstance(object_orig, Literal):
    dt = request.parameters.get("object_orig_datatype") or None
    if dt:
        object_orig.datatype = URIRef(dt)
    
if object!=None:
    processor = request.parameters.get("processor", None)
    if processor=="delete":
	redfoot.remove((subject, predicate, object_orig))
	predicate = None
	object = None
    elif processor=="update":
        #derive context from subject
        #context = redfoot.get_context(redfoot.context_id(subject))        
        uid = redfoot.value(request.session_id, SESSION.uid)
        if uid:
            #use context associated with session id.
            try:
                user_document = redfoot.value(request.session_id, SESSION.context)
            except UniquenessError, e:
                user_document = None 
            if user_document is None:
                from time import gmtime
                # 2005/04/06/09:45:22/
                year, month, date, h, m, s, _, _, _ = gmtime()
                name = "%04d/%02d/%02d/%02d:%02d:%02d" % (year, month, date, h, m, s)
                uri = URIRef("%s/document/%s" % (request.host, name))
                user_document = redfoot.context_id(uri)
                c = redfoot.get_context(request.session_id)
                redfoot.remove((request.session_id, SESSION.context, None))
                c.add((request.session_id, SESSION.context, user_document))
                c.add((user_document, RDF.type, REDFOOT.Context))
            context = redfoot.get_context(user_document, creator=uid)
	    if object_orig!=None and object_orig!=object:
		redfoot.remove((subject, predicate, object_orig))
	    context.add((subject, predicate, object))
        else:
            response.write("<p>Did not update. Must be logged in to update.</p>")

possible = []
for property in redfoot.possible_properties_for_subject(subject):
    possible.append((redfoot.label(property) or property, property))
possible.sort()

?>

<form kid:if="subject" 
      name="edit_form" action="" method="post">

  <input type="hidden" name="subject" value="${subject.n3()}"/>
  <input type="hidden" name="processor" value="update"/>
  <input kid:if="object!=None" type="hidden" name="object_orig" value="${object.n3()}"/>
  <input kid:if="object!=None and isinstance(object, Literal)" type="hidden" name="object_orig_datatype" value="${object.datatype}"/>

<table class="generic">
  <tr>
    <td>Subject</td>
    <td>${subject}</td>    
  </tr>
  <tr>
    <td>predicate</td>
    <td>
      <select type="text" name="predicate" onChange="edit_form.submit()">
        <option value="">Select a new Property to add</option>

        <option kid:if="predicate and not predicate in redfoot.possible_properties_for_subject(subject)"
                style="color: red" selected="true" 
                value="${predicate.n3()}">${redfoot.label(predicate)}</option>

        <span kid:for="label, property in possible" kid:strip="">
          <option kid:if="property==predicate" value="${property.n3()}" selected="true" >${label}</option>
          <option kid:if="property!=predicate" value="${property.n3()}">${label}</option>
        </span>
      </select>
    </td>
  </tr>

  <tr>
    <td>Object</td>
    <td>

<?python
if object is not None and isinstance(object, Literal):
    isDatatype = True
else:
    isDatatype = (predicate, RDFS.range, RDFS.Literal) in redfoot or (predicate, RDFS.range, RDFS.Resource) in redfoot or (predicate, RDF.type, URIRef('http://www.w3.org/2002/07/owl#DatatypeProperty')) in redfoot

values = {}
value_list = []
seen = set()
if object and not isinstance(object, Literal):
    seen.add(object)
    value_list.append((redfoot.label(object) or object, object))
if predicate:
    for range in redfoot.objects(predicate, RDFS.range):
	for t in redfoot.transitive_subjects(RDFS.subClassOf, range):
	    for value in redfoot.subjects(RDF.type, t):
		if not value in seen:
		    seen.add(value)
		    #label = "%s (%s)" % (redfoot.label(value), value)
		    label = redfoot.label(value) or value
		    values[value] = label
		    value_list.append((label, value))
value_list.sort()
isObject = bool(value_list)
?>

  <span kid:if="isObject" kid:strip="">
      <select name="object" kid:if="predicate">

        <option value=''></option>
        <span kid:for="label, value in value_list" kid:strip="">
          <option kid:if="value==object" value="${value.n3()}" selected="true" >${label}</option>
          <option kid:if="value!=object" value="${value.n3()}">${label}</option>
        </span>
      </select>
  </span>

    <span kid:strip="" kid:if="isDatatype">
<?python 
if object and isinstance(object, Literal):
    value = object
else:
    value = ''

possible = []
for datatype in redfoot.subjects(RDF.type, RDFS.Datatype):
    label = redfoot.label(datatype)
    possible.append((label, datatype))
possible.sort()
?>

<span kid:if="isDatatype and isObject" kid:strip=""><br/>or<br/></span>

Datatype: <select name="datatype">
  <option value=''></option>
  <span kid:for="label, datatype in possible" kid:strip="">
    <option kid:if="isinstance(object, Literal) and datatype==object.datatype" value="${datatype}" selected="true" >${label}</option>
    <option kid:if="not isinstance(object, Literal) or datatype!=object.datatype" value="${datatype}">${label}</option>
  </span>
</select>
<br/>
      <textarea name="object_literal" rows="10" cols="60">${value}</textarea>

    </span>
    </td>    
  </tr>
</table>

<span kid:if="object!=None">
  <input type="submit" value="Update"/>
  <input type="button" value="Delete" onclick="edit_form.processor.value='delete'; edit_form.submit()"/>
</span>
<span kid:if="object==None">
  <input type="submit" value="Add"/>
</span>
<input type="button" value="Edit Resource" 
       onclick="edit_form.processor.value='update';edit_form.action='resource'; edit_form.submit()"/>
</form>

<?python
DC_creator = URIRef("http://purl.org/dc/elements/1.1/creator")

if subject and predicate and object:
    contexts = []
    for context in redfoot.contexts((subject, predicate, object)):
        creator = redfoot.value(context, DC_creator)
        if creator:
            label = redfoot.label(creator) or creator
        else:
            label = " - "
        contexts.append((label, context))
else:
    contexts = []
?>
<p kid:for="label, context in contexts">Asserted by: ${label}</p>

</div>
]]>               
    </rdf:value>
  </redfoot:Python>

</rdf:RDF>
