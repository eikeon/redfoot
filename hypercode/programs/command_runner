<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
   xmlns:rdfe="http://redfoot.net/rdf#"
   xmlns:redfoot="http://redfoot.net/2005/redfoot#"
   xmlns:commands="http://redfoot.net/2005/commands#"
>

  <rdfe:RDFXMLDocument rdf:about="">
  </rdfe:RDFXMLDocument>
  
  <redfoot:Python rdf:about="#">
    <rdfs:label>Command Runner</rdfs:label>
    <rdf:value rdf:datatype="http://redfoot.net/2005/redfoot#Python">
<![CDATA[

from itertools import chain

COMMANDS = redfoot.namespace("http://redfoot.net/2005/commands#")

commands = {}

for config in chain(redfoot.objects(redfoot.uri, COMMANDS.config), 
		    redfoot.objects(REDFOOT.Globals, COMMANDS.config)):
    redfoot.check(config)

    for command in redfoot.objects(config, COMMANDS.command):
        redfoot.check(command)
        label = redfoot.label(command)
        code = redfoot.value(command, REDFOOT.code)
        commands[label] = code

        # TODO: also make available as command's label prefixed with
        # config's label (or somesuch)... so that there's a way to
        # disambiguate commands with same name from two different
        # config groups.

        redfoot.check(code)

if not args:
    args = [""]

command = args[0]
code = commands.get(command, None)
if code:
    redfoot.execute(code, args=args[1:])
else:
    import logging
    _logger = logging.getLogger("redfoot.%s" % redfoot_current)    
    if command:
        _logger.info("Command '%s' not found." % command)
    _logger.info("")
    command_list = commands.keys()
    command_list.sort()
    _logger.info("available commands: %s" % " ".join(command_list))

]]>
    </rdf:value>
  </redfoot:Python>

</rdf:RDF>  
