<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns:rdfs='http://www.w3.org/2000/01/rdf-schema#'
  xmlns:rdfe="http://redfoot.net/3.0/rdf#"
  xmlns:code="http://redfoot.net/3.0/code#"
  xmlns:redfoot='http://redfoot.net/3.0/redfoot#'
  xmlns:server="http://redfoot.net/3.0/server#"
  xmlns:template='http://redfoot.net/3.0/template#'
  xmlns:kid='http://redfoot.net/3.0/kid#'
  xmlns:aspect="http://redfoot.net/3.0/aspect#"
>

  <rdfe:RDFXMLDocument rdf:about="">
  </rdfe:RDFXMLDocument>
  
  <redfoot:Namespace rdf:about="#">
    <rdfs:label>Auth Invite</rdfs:label>
    <rdfs:comment>The Redfoot auth invite namespace.</rdfs:comment>
  </redfoot:Namespace>

  <aspect:Aspect rdf:ID="aspect">
    <rdfs:label>Authentication (Invite)</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <!-- TODO: this has not been converted to aspect yet... -->
    <aspect:item rdf:resource="#login_page"/>
    <aspect:item rdf:resource="#login_process_page"/>
    <aspect:item rdf:resource="#logout_page"/>
    <aspect:item rdf:resource="#user_invite_page"/>
    <aspect:item rdf:resource="#user_invite_process_page"/>
    <aspect:item rdf:resource="#register_process_page"/>
  </aspect:Aspect>

  <rdf:Description rdf:ID="auth_context">
    <rdfs:label>authentication support</rdfs:label>
    <rdfs:comment>
    </rdfs:comment>
    <!--
need to load #auth with a command like:
redfoot load http://redfoot.net/dev/content/auth http://localhost:8080 "#auth_context"

in which case "" should be a server:Site
      -->
  </rdf:Description>

  <rdfs:Class rdf:ID="User">
    <rdfs:label>Invitor User</rdfs:label>
    <rdfs:comment>A class of user that can invite other users to become members of the site.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="http://redfoot.net/3.0/session#User"/>
  </rdfs:Class>

  <server:Page rdf:ID="login_page">
    <aspect:location>/login/</aspect:location>
    <rdfs:label>Login</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <rdfs:member rdf:resource="http://redfoot.net/3.0/comment#exclude"/>
    <template:content rdf:resource="auth#login"/>
  </server:Page>

  <server:Page rdf:ID="login_process_page">
    <aspect:location>/login/process/</aspect:location>
    <rdfs:label>Login process</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <server:long_running>true</server:long_running>
    <server:page_handler rdf:resource="auth#login_process"/>
  </server:Page>

  <server:Page rdf:ID="logout_page">
    <aspect:location>/logout/</aspect:location>
    <rdfs:label>Logout</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <rdfs:member rdf:resource="http://redfoot.net/3.0/comment#exclude"/>
    <server:page_handler rdf:resource="auth#logout_process"/>
  </server:Page>

  <server:Page rdf:ID="user_invite_page">
    <aspect:location>/user/invite</aspect:location>
    <rdfs:label>Invite User</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <rdfs:member rdf:resource="http://redfoot.net/3.0/comment#exclude"/>
    <template:content rdf:resource="#auth_invite"/>
    <server:allow rdf:resource="#User"/>
  </server:Page>

  <server:Page rdf:ID="user_invite_process_page">
    <aspect:location>/user/invite/process/</aspect:location>
    <rdfs:label>Invite User</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <rdfs:member rdf:resource="http://redfoot.net/3.0/comment#exclude"/>
    <template:content rdf:resource="#auth_invite_process"/>
  </server:Page>

  <server:Page rdf:ID="register_process_page">
    <aspect:location>/register/process/</aspect:location>
    <rdfs:label>Register Process</rdfs:label>
    <rdfs:comment></rdfs:comment>
    <server:page_handler rdf:resource="#register_process"/>
  </server:Page>


  <server:PageHandler rdf:ID="register_process">
    <server:content_type>application/xhtml+xml</server:content_type>
    <code:python rdf:datatype="http://redfoot.net/3.0/redfoot#Python"><![CDATA[
import md5

FOAF = redfoot.namespace("http://xmlns.com/foaf/0.1/")
SESSION = redfoot.namespace("http://redfoot.net/3.0/session#")

return_uri = URIRef(request.parameters.get("return_uri", "%s/" % request.host))
register_uri = URIRef(request.parameters.get("register_uri", "%s/register/" % request.host))
username = request.parameters.get("username", None)
password = request.parameters.get("password", None)
verify = request.parameters.get("verify", None)
invitation = URIRef(request.parameters.get("invitation", None))

from rdflib.Namespace import Namespace
USER = Namespace("%s/user#" % request.host)

def register():
    request.create_session()
    sid = request.session_id
    assert sid
    context = redfoot.get_context(redfoot.context_id(sid))
    context.remove((sid, SESSION.message, None))
    users_context = redfoot.get_context(redfoot.context_id("%s#users" % request.host))
    if invitation is None or (invitation, RDF.type, USER.Invitation) not in redfoot:
        context.add((sid, SESSION.message, Literal("No invitation found")))
        response.setStatus(302, 'found')   
        response.setHeader('Location', register_uri)
        return
    if (None, USER.invitation, invitation) in redfoot: # if already associated with a user
        context.add((sid, SESSION.message, Literal("Sorry, invitation already accepted.")))
        response.setStatus(302, 'found')   
        response.setHeader('Location', register_uri)
        return
    uid = redfoot.value(invitation, FOAF.mbox)
    if uid is None:
        context.add((sid, SESSION.message, Literal("Sorry, invitation missing a FOAF.mbox")))
        response.setStatus(302, 'found')   
        response.setHeader('Location', register_uri)
        return
    if (uid, SESSION.hexdigest, None) in redfoot:
        context.add((sid, SESSION.message, Literal("User already exists.")))
        response.setStatus(302, 'found')   
        response.setHeader('Location', register_uri)
        return
    if not username:
        context.add((sid, SESSION.message, Literal("No username entered.")))
        response.setStatus(302, 'found')   
        response.setHeader('Location', register_uri)
        return
    # TODO: check username is not in user
    if password==verify:
        hexdigest = Literal(md5.new(password).hexdigest())
        redfoot.remove((sid, SESSION.authenticated, None))
        redfoot.remove((sid, SESSION.uid, None))
        context.add((sid, SESSION.authenticated, Literal("True")))
        context.add((sid, SESSION.uid, uid))
        users_context.add((uid, RDFS.label, Literal(username)))
        users_context.add((uid, RDF.type, URIRef("#User", base=request.host)))
        users_context.add((uid, SESSION.hexdigest, hexdigest))
        #users_context.add((uid, DC_created, Literal("%s" % time(), datatype=URIRef(REDFOOT.seconds_since_epoch))))
        users_context.add((uid, USER.invitation, invitation))
        response.setStatus(302, 'found')   
        response.setHeader('Location', return_uri)
        return
    else:
        context.add((sid, SESSION.message, Literal("password and verify mismatch.")))
        response.setStatus(302, 'found')   
        response.setHeader('Location', register_uri)
        return

if request.method=='POST':
    register()
else:
    pass # TODO
    
      ]]></code:python>
  </server:PageHandler>

  <server:PagePartHandler rdf:ID="auth_invite">
    <kid:template rdf:datatype="http://www.w3.org/2001/XMLSchema#string"><![CDATA[
 <span xmlns:kid="http://purl.org/kid/ns#" kid:omit="">

  <form action="/user/invite/process/" method="POST">
    <table width="100%%">
      <tr>
	<th>Email Address</th>
	<td><input type="text" name="email" value="" size="40"/></td>
      </tr>
      <tr>
       <th>Message</th>
	<td><textarea name="message" cols="80" rows="10"></textarea></td>
      </tr>
     <tr>    
       <th>&#160;</th>
       <td><input type="submit" value="invite"/></td>
     </tr>
    </table>
  </form>

 </span> 
      ]]></kid:template>
  </server:PagePartHandler>

  <server:PagePartHandler rdf:ID="auth_invite_process">
    <kid:template rdf:datatype="http://www.w3.org/2001/XMLSchema#string"><![CDATA[
 <span xmlns:kid="http://purl.org/kid/ns#" kid:omit="">
<?python

# Import smtplib for the actual sending function
import smtplib

# Import the email modules we'll need
from email.MIMEText import MIMEText

email = request.parameters.get("email")
message = request.parameters.get("message")
uid = None
session_id = request.session_id
if session_id:
    uid = redfoot.value(session_id, SESSION.uid)
assert uid

subject = "testing"

from string import ascii_letters
from random import choice

import md5

token = md5.new()
for i in xrange(0, 10):
    token.update(choice(ascii_letters))

FOAF = redfoot.namespace("http://xmlns.com/foaf/0.1/")
DC_creator = URIRef("http://purl.org/dc/elements/1.1/creator")
DC_created = URIRef("http://purl.org/dc/terms/created")

from rdflib.Namespace import Namespace
USER = Namespace("%s/user#" % request.host)

invitation = URIRef(token.hexdigest(), base=request.host)

c = redfoot.get_context(URIRef("#invitations", base=request.host))
c.add((invitation, RDFS.label, Literal("Invitation")))
c.add((invitation, RDF.type, USER.Invitation))
c.add((invitation, FOAF.mbox, URIRef("mailto:%s" % email)))
#c.add((invitation, DC_created, Literal("%s" % time(), datatype=URIRef(REDFOOT.seconds_since_epoch))))
c.add((invitation, DC_creator, URIRef("mailto:%s" % uid)))

message += ("""\
====================

Click on:
%s

""" % invitation)

# Create a text/plain message
msg = MIMEText(message)

msg['Subject'] = subject
msg['From'] = uid
msg['To'] = email

# Send the message via our own SMTP server, but don't include the
# envelope header.
s = smtplib.SMTP()
s.connect()
s.sendmail(uid, [email], msg.as_string())
s.close()

?>
  <h2>Your invitation has been sent</h2>

 </span> 
      ]]></kid:template>
  </server:PagePartHandler>

  <rdf:Description rdf:about="/user#Invitation">
    <template:content>
      <server:PagePartHandler rdf:ID="Invitation_handler">
        <kid:template rdf:datatype="http://www.w3.org/2001/XMLSchema#string"><![CDATA[
 <span xmlns:kid="http://purl.org/kid/ns#" kid:omit="">
<?python
SESSION = redfoot.namespace("http://redfoot.net/3.0/session#")

if request.session_id:
    message = redfoot.value(request.session_id, SESSION.message)
else:
    message = None

from rdflib.Namespace import Namespace
USER = Namespace("%s/user#" % request.host)

invite_used = (None, USER.invitation, request.uri) in redfoot # if already associated with a user

?>
 <span kid:if="invite_used">
  <p>Invite already used.</p>
 </span>

 <span kid:if="not invite_used">
  <p>
    Welcome. 
  </p>

  <p>${message}</p>
  <form action="/register/process/" method="POST">
    <table>
      <tr>
        <th>Username</th>
        <td><input type="text" name="username" value=""/></td>
      </tr>
      <tr>
       <th>Password</th>
        <td><input type="password" name="password"/></td>
      </tr>
      <tr>
        <th>Verify</th>
        <td><input type="password" name="verify"/></td>
      </tr>
     <tr>    
       <th>&#160;</th>
       <td><input type="submit" value="register"/></td>
     </tr>
    </table>
    <input type="hidden" name="invitation" value="${request.uri}"/>
    <input type="hidden" name="register_uri" value="${request.uri}"/>
  </form>
 </span>
</span> 
      ]]></kid:template>
      </server:PagePartHandler>
    </template:content>
  </rdf:Description>

</rdf:RDF>
