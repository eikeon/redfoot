<?xml version="1.0" encoding="UTF-8"?>
<rdf:RDF
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
   xmlns:redfoot="http://redfoot.net/2005/redfoot#"
   xmlns:commands="http://redfoot.net/2005/commands#"
>

  <redfoot:Namespace rdf:about="#">
    <rdfs:label>Commands</rdfs:label>
    <rdfs:comment>The Redfoot commands namespace.</rdfs:comment>
  </redfoot:Namespace>

  <rdfs:Class rdf:ID="Command">
    <rdfs:label>Command</rdfs:label>
    <rdfs:comment>...</rdfs:comment>
    <rdfs:subClassOf rdf:resource="http://redfoot.net/2005/redfoot#Code"/>
  </rdfs:Class>

  <redfoot:Python rdf:ID="runner">
    <rdfs:label>Command Runner</rdfs:label>
    <rdfs:seeAlso rdf:resource="../hypercode/commands/manage#"/>
    <rdfs:seeAlso rdf:resource="../hypercode/commands/static#"/>
    <rdf:value rdf:datatype="http://redfoot.net/2005/redfoot#Python">
<![CDATA[

import logging

_logger = logging.getLogger(__uri__)

COMMANDS = redfoot.namespace(URIRef("#", base=__uri__))

commands = {}

for command in redfoot.instances(COMMANDS.Command):
    redfoot.check(command)
    label = redfoot.label(command)

    # TODO: do we need to check for this level of indirection or can
    # this be deprecated.
    code = redfoot.value(command, REDFOOT.code) or command
    if code!=command:
        redfoot.check(code)
    commands[label] = code

# TODO: command line parsing and usage
if not args:
    args = [""]

command = args[0]

# find code object by label or full URIRef
code = commands.get(command, URIRef(command))
if code:
    redfoot.execute(code, args=args[1:])
else:
    if command:
        redfoot.write("Command '%s' not found.\n" % command)
    command_list = commands.keys()
    command_list.sort()
    redfoot.write("available commands: \n    %s\n" % ", ".join(command_list))

]]>
    </rdf:value>
  </redfoot:Python>

      <commands:Command rdf:ID="load">
        <rdfs:label>load</rdfs:label>
        <rdf:value rdf:datatype="http://redfoot.net/2005/redfoot#Python">
<![CDATA[

if len(args)==0 or len(args)>3:
    print "usage: ./redfoot.py load <uri> [<publicID>]"
else:
    import os
    from urllib import pathname2url
    from urlparse import urljoin
    url = URIRef(args[0], base="%s/" % urljoin("file:", pathname2url(os.getcwd())))
    try:
        publicID = URIRef(redfoot.absolutize(args[1], defrag=False))
    except:
        publicID = None
    print "loading: %s" % url
    if publicID:
        print " with publicID: %s" % publicID
    redfoot.load(url, publicID=publicID, creator=__uri__)

]]>
        </rdf:value>
      </commands:Command>

</rdf:RDF>
