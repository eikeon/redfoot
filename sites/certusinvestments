<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
  xmlns:rdfs='http://www.w3.org/2000/01/rdf-schema#'
  xmlns:redfoot='http://redfoot.net/3.0/redfoot#'
  xmlns:server='http://redfoot.net/3.0/server#'
  xmlns:session='http://redfoot.net/3.0/session#'
  xmlns:browse='http://redfoot.net/3.0/browse#'
  xmlns:template='http://redfoot.net/3.0/template#'
  xmlns:commands='http://redfoot.net/3.0/commands#'
  xmlns:quant='http://www.certusinvestments.com/quant#'
>

  <redfoot:Admin rdf:about="mailto:chalaschek@gmail.com">
    <rdf:type rdf:resource="#User"/>
    <rdfs:label>Chris Halaschek-Wiener</rdfs:label>
    <session:hexdigest>84072d8ca1dbe193b29678b88698d3c8</session:hexdigest>
  </redfoot:Admin>

  <!-- TODO: load these from my "FOAF" info -->
  <redfoot:Admin rdf:about="mailto:eikeon@eikeon.com">
    <rdf:type rdf:resource="#User"/>
    <rdfs:label>Daniel Krech</rdfs:label>
    <session:hexdigest>334b473e8c2555d5eb722e0c932df793</session:hexdigest>
  </redfoot:Admin>

  <server:Site rdf:about="">  
    <server:page_handler rdf:resource="#page"/>

    <template:section rdf:resource="/"/>
    <!--<template:section rdf:resource="/browse/"/>-->
    <template:section rdf:resource="/background/"/>
    <template:section rdf:resource="/strategies/"/>
    <template:section rdf:resource="/performance/"/>
    <template:section rdf:resource="/contact/"/>
  </server:Site>
  <!-- TODO: clean up what identifier we're using for server:Site instances "" or "data#Site -->
<!--
    TODO: if we do this login functionality will not get loaded. For now, we won't do this ;)
  <rdf:Description rdf:about="data#Site">  
    <rdfs:label>Certus Investments</rdfs:label>
  </rdf:Description>
-->

  <rdf:Description rdf:about="/">
    <rdfs:label>Home</rdfs:label>
    <template:section_rank>0.0</template:section_rank>
  </rdf:Description>

  <template:Section rdf:about="/background/">
    <rdfs:label>Background</rdfs:label>
    <template:section_rank>10.0</template:section_rank>
  </template:Section>

  <template:Section rdf:about="/strategies/">
    <rdfs:label>Strategies</rdfs:label>
    <template:section_rank>20.0</template:section_rank>
  </template:Section>

  <template:Section rdf:about="/performance/">
    <rdfs:label>Performance</rdfs:label>
    <template:section_rank>30.0</template:section_rank>
  </template:Section>

  <template:Section rdf:about="/contact/">
    <rdfs:label>Contact</rdfs:label>
    <template:section_rank>60.0</template:section_rank>
  </template:Section>

  <rdf:Description rdf:about="/browse/">
    <browse:root rdf:resource="/quant#Resource"/>
  </rdf:Description>

  <rdfs:Class rdf:ID="User">
    <rdfs:label>Quant User</rdfs:label>
    <rdfs:subClassOf rdf:resource="http://redfoot.net/3.0/session#User"/>
    <template:content>
      <template:Content rdf:ID="UserPagePartHandler">
        <rdfs:label>Quant User Page Part Handler</rdfs:label>
       <rdf:value rdf:datatype="http://redfoot.net/3.0/server#Kid">
<![CDATA[

<h3>Hello</h3>

]]>
        </rdf:value>
      </template:Content>
    </template:content>
  </rdfs:Class>

  <rdfs:Class rdf:about="quant#Stock">
    <template:content>
      <template:Content rdf:ID="StockPagePartHandler">
        <rdfs:label>Stock</rdfs:label>
        <server:allow rdf:resource="http://redfoot.net/3.0/redfoot#Admin"/>
       <rdf:value rdf:datatype="http://redfoot.net/3.0/server#Kid">
<![CDATA[
<div xmlns="http://www.w3.org/1999/xhtml"
     xmlns:kid="http://purl.org/kid/ns#"
     kid:strip=""
>
<?python
import logging

_logger = logging.getLogger(redfoot_current)

from rdflib import Namespace
QUANT = Namespace(URIRef("quant#", base=request.host))

uri = request.uri.abstract()

symbol = redfoot.value(uri, QUANT.symbol)

try:
    SESSION = redfoot.namespace("http://redfoot.net/3.0/session#")
    uid = None
    if request.session_id:
        uid = redfoot.value(request.session_id, SESSION.uid)
    if uid:
        who_label = redfoot.label(uid)
    else:
        who_label = "Someone"
    message = "%s is looking at %s ( %s )</body>" % (who_label, redfoot.label(uri), uri.concrete())
    from twisted.words.xish.domish import  escapeToXml
    html = """
<body xmlns='http://www.w3.org/1999/xhtml' style='background-color:#E8A630;color:#000000'>
  <span style='font-family:Verdana'>
    %s is looking at <a href="%s">%s</a>
  </span>
</body>
""" % (who_label, escapeToXml(uri.concrete(), isattrib=True), escapeToXml(redfoot.label(uri)))
    if uid: # only if user is logged in (not in the "Someone" case)
        redfoot.xmpp.send(REDFOOT.Admin, message, html)
except Exception, e:
    _logger.exception("unable to send alert: %s" % e)

?>
  <p>${redfoot.value(uri, RDFS.comment)}</p>

  <p>Market Value: ${redfoot.value(uri, QUANT.market_value)}</p>

<img src="http://bigcharts.marketwatch.com/charts/big.chart?symb=${symbol}&amp;size=1"></img>

<img src="http://bigcharts.marketwatch.com/charts/big.chart?symb=${symbol}&amp;time=18&amp;freq=9&amp;size=1"></img>


</div>
]]>
        </rdf:value>
      </template:Content>
    </template:content>
  </rdfs:Class>

  <rdfs:Class rdf:about="quant#Basket">
    <server:supported_content_types>application/xhtml+xml,text/csv</server:supported_content_types>
    <server:page_handler>
      <server:PageHandler rdf:ID="BasketCSVPageHandler">
        <rdfs:label>Basket CSV Page Handler</rdfs:label>
        <server:content_type>text/csv</server:content_type>
        <server:allow rdf:resource="http://redfoot.net/3.0/redfoot#Admin"/>
       <rdf:value rdf:datatype="http://redfoot.net/3.0/redfoot#Python">
<![CDATA[

import logging

_logger = logging.getLogger(redfoot_current) # TODO: we may need to set redfoot_current or define another var

from rdflib import Namespace

QUANT = Namespace(URIRef("quant#", base=request.host))

basket_uri = request.uri.abstract()

symbols = set()
for item in redfoot.objects(basket_uri, QUANT.basketItem):
    symbol = redfoot.value(item, QUANT.symbol, any=True)
    if symbol:
        symbols.add(symbol)
    else:
        _logger.debug("item %s does not have a symbol" % item.concrete())

response.write(",".join(symbols))

]]>
        </rdf:value>
      </server:PageHandler>
    </server:page_handler>
    <template:content>
      <template:Content rdf:ID="BasketPagePartHandler">
        <rdfs:label>Basket</rdfs:label>
       <rdf:value rdf:datatype="http://redfoot.net/3.0/server#Kid">
<![CDATA[
<div xmlns="http://www.w3.org/1999/xhtml"
     xmlns:kid="http://purl.org/kid/ns#"
     kid:strip=""
>
<?python
from rdflib import Namespace

QUANT = Namespace(URIRef("quant#", base=request.host))

basket_uri = request.uri.abstract()

items = []
for item in redfoot.objects(basket_uri, QUANT.basketItem):
    label = redfoot.label(item)
    symbol = redfoot.value(item, QUANT.symbol, any=True)
    items.append((label, item, symbol))
items.sort()

?>
  <p>${redfoot.value(basket_uri, RDFS.comment)}</p>

  <div kid:for="label, uri, symbol in items">
    <h3><a href="${uri.concrete()}">${label}</a></h3>
    <p>
      <img src="http://bigcharts.marketwatch.com/charts/big.chart?symb=${symbol}&amp;time=10yr&amp;freq=1dy&amp;lf=1&amp;type=256&amp;style=1538&amp;size=3"/>
      <img src="http://bigcharts.marketwatch.com/charts/big.chart?symb=${symbol}&amp;time=1yr&amp;freq=1dy&amp;lf=1&amp;type=256&amp;style=1538&amp;size=3"/>
      <img src="http://bigcharts.marketwatch.com/charts/big.chart?symb=${symbol}&amp;time=10dy&amp;freq=5mi&amp;lf=1&amp;type=256&amp;style=1538&amp;size=3"/>
      <img src="http://bigcharts.marketwatch.com/charts/big.chart?symb=${symbol}&amp;time=1dy&amp;freq=5mi&amp;lf=1&amp;type=256&amp;style=1538&amp;size=3"/>
    </p>

  </div>
</div>
]]>
        </rdf:value>
      </template:Content>
    </template:content>
  </rdfs:Class>

  <template:Template rdf:ID="page">
    <rdfs:label>Quant Template</rdfs:label>
    <template:content rdf:resource="http://redfoot.net/3.0/templates/classic#content"/>
    <template:background_color>#B0C9BE</template:background_color>
    <template:head rdf:resource="http://redfoot.net/3.0/templates/classic#head"/>
    <template:css rdf:resource="#css"/>
    <template:title rdf:resource="#title"/>
    <template:shortcut_icon rdf:resource="http://redfoot.net/2002/11/25/favicon.ico"/>
    <template:header rdf:resource="#header"/>
    <template:navigation rdf:resource="#navigation"/>
    <template:user_navigation rdf:resource="http://redfoot.net/3.0/templates/classic#user_navigation"/>
    <template:footer rdf:resource="#footer"/>
    <server:unauthorized_page_handler rdf:resource="http://redfoot.net/3.0/templates/classic#unauthorized_page_handler"/>
    <server:unauthorized_content_handler rdf:resource="http://redfoot.net/3.0/templates/classic#unauthorized_content_handler"/>
    <server:content_type>application/xhtml+xml</server:content_type>
    <rdf:value rdf:datatype="http://redfoot.net/3.0/server#Kid">
<![CDATA[<html xmlns="http://www.w3.org/1999/xhtml" xmlns:kid="http://purl.org/kid/ns#">
<?python SERVER = redfoot.namespace("http://redfoot.net/3.0/server#")?>
<?python TEMPLATE = redfoot.namespace("http://redfoot.net/3.0/template#")?>
<?python
title = redfoot.label(request.uri, None) or redfoot.label(request.uri.abstract(), None) or "-"
?>
  ${display(lookup(TEMPLATE.head))}
  <body>
  
    <table id="usertable"  cellspacing="0px" cellpadding="0px" align="center">
      <tr>
        <td class="usernavcontent">
        <div id="usernav">
          ${display(lookup(TEMPLATE.user_navigation))}
        </div>
        </td>
      </tr>
    </table>
    
    <table id="boundary" cellspacing="0px" cellpadding="0px" align="center">  
      <!--<tr>
        <td class="usernavcontent">
        <div id="usernav">
          ${display(lookup(TEMPLATE.user_navigation))}
        </div>
        </td>
      </tr>-->
      <tr>
        <td colspan="2">
          <table id="header" cellspacing="0px" cellpadding="0px" border="0">
            <tr><td id="headerTitle"><h1><a href="${request.host}">${redfoot.label(request.site) or request.host}</a></h1></td></tr>
            <tr><td height="100%" id="headerGraphic"><img height="100%" id="headerGraphic" src="http://www.mindswap.org/~chris/quant/website/images/headerGraphic.gif" alt=""/></td></tr>
            <tr><td class="horizontalSpacer"></td></tr>
            <tr>
              <td>

                <!-- Start the nav menu-->

                  ${display(lookup(TEMPLATE.navigation))}


              </td>
            </tr>
            <tr><td class="horizontalSpacer" colspan="9"></td></tr>
            </table>
          </td>
	</tr>
      <tr>
        <td>
          <table id="main" cellspacing="0px" cellpadding="0px" border="0">
            <tr>
              <td class="verticalSpacer"></td>
              <td id="centerPanel" valign="top">

                  <!-- begin content bits -->
                  <?python authorized = allow(request.uri)?>
                  <div id="content" kid:if="authorized">
                    <!-- TODO: -->

                    <h2 kid:if="request.path!='/' and request.path!='/background/' and request.path!='/contact/'"><a href="${request.uri}">${title}</a></h2>
                    ${display(lookup(TEMPLATE.content))}
                    <?python COMMENT = redfoot.namespace("http://redfoot.net/3.0/comment#")?>
                    <div class="comments" kid:if="lookup(TEMPLATE.comments) and (request.uri, RDFS.member, COMMENT.exclude) not in redfoot">
                       ${display(lookup(TEMPLATE.comments))}
                       ${display(lookup(TEMPLATE.add_comment))}
                    </div>
                    
                    <?python edit_content_uri = URIRef('%s/edit/content/' % request.host)?>
                    <div kid:if="(edit_content_uri, None, None) in redfoot and allow(edit_content_uri)" id="edit_content">
                      <?python from urllib import quote?>
                      <p> 
                        <a kid:if="(request.uri, None, None) in redfoot" href="/edit/content/?uri=${quote(request.uri)}">Edit Content</a>
                        <a kid:if="(request.uri, None, None) not in redfoot" href="/edit/content/?uri=${quote(request.uri)}">Create</a>
                      </p>
                    </div>
                  </div>
                  <div id="content" kid:if="authorized is False">
                    <h2>Unauthorized Page</h2>
                  </div>
                  <!-- end content bits -->

              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>
    
    <!-- Footer -->
    
    <table width="100%" id="footer" cellpadding="0" cellspacing="0" border="0" align="center">
      <tr>
	<td height="5"></td>
      </tr>
      <tr>
	<td align="center" width="100%">Copyright 2006 &#169; Certus Investments. All Rights Reserved.</td>
      </tr>
      <tr>
	<td height="5"></td>
      </tr>
      <tr>
	<!--<td>Please read our <a class="disclaimer" href="Disclaimer.jsp">Disclaimer</a> and <a class="disclaimer" href="PrivacyPolicy.jsp">Privacy Policy</a>.</td>-->
      </tr>
      <tr>
	<td height="9"></td>
      </tr>
    </table>
    <!-- Footer Ends -->
  </body>
</html>
]]>
    </rdf:value>    
  </template:Template>

  <server:PagePartHandler rdf:ID="css">
    <rdfs:label>Quant css</rdfs:label>
    <server:content_type>text/css</server:content_type>
    <rdf:value rdf:datatype="http://redfoot.net/3.0/redfoot#Python">

TEMPLATE = redfoot.namespace("http://redfoot.net/3.0/template#")

color = lookup(TEMPLATE.background_color) or "#cccccc"

response.write("""

body {
    margin: 0px;
    color: black;
    background-color: #C0C0C0;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 10px;
}

#usertable {
    width: 80%%;
    //border: 1px solid white;
    //color: black;
    //background-color: #F8F8F8;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 10px;
}

#boundary {
    width: 80%%;
    border: 1px solid white;
    color: black;
    background-color: #F8F8F8;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 10px;
}

#headerTitle {
   // border: medium none rgb(0,0,0);
    //background-color: white;
    background-color: #F8F8F8;
    //width: 100%%;
}


#header {
    border: medium none rgb(0,0,0);
    //background-color: white;
    //background-color: #C0C0C0;
    width: 100%%;
}

#headerLogo {
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 40px;
    height: 67px;
    padding: 0px 0px 0px 20px;
    color: rgb(62,114,141);
    //background-color: white;
    //background-color: #C0C0C0;

}

#headerGraphic {
    width: 100%%;
    height: 90px;
}

#headerMenu {
    width: 100%%;
    border: medium none rgb(0,0,0);
}

TD.menuItem {
    background-color: #999999;
    text-align: center;
}

TD.usernavcontent {
    
    text-align: right;
}

#edit_content { 
    text-align: right;
}


TD.menuItem a {
font-family: Verdana, Arial, Helvetica, sans-serif;
font-size: 10px;
font-weight: normal;
text-align: center; 
text-decoration: none;
display: block;
color: white;
background-color:#999999;
margin:0px 0px 0px 0px;
padding:5px 10px 5px 10px;
}

TD.menuItem a:hover {
//color: #cc0000;
color: #000066;
}

#current{
color: #000066;
}

TD.horizontalSpacer {
    height: 1px;
    background-color: white;
}

TD.verticalSpacer {
    width: 2px;
    background-color: white;
}

TD.smallVerticalSpacer {
    width: 1px;
    background-color: white;
}

#contactSmall {
    border: 1px solid #999999;
    color: black;
    background-color: #F8F8F8;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 10px;
    height: 150px;
}

#contactSmallPanel {
    width: 300px;
    border: medium none rgb(0,0,0);
    margin: 0px;
    padding: 20px 20px 20px 20px;
    color: black;
    //background-color: rgb(193,193,193);
}

#contactSmallTitle {
    margin: 0px;
    padding: 3px 3px 3px 3px;
    color: black;
    background-color: #999999;
    height: 20px;
    font-weight: bold;
    text-align: center
}

#narrowLeftPanel {
    width: 149px;
    border: medium none rgb(0,0,0);
    margin: 0px;
    padding: 20px 20px 20px 20px;
    color: black;
    background-color: rgb(159,185,198);
}

.leftPanelTitle {
    font-weight: bold;
    color:  rgb(62,114,141);
}


#address{
    text-align: center;
}



#centerPanel {
    width: 800px;
    border: medium none rgb(0,0,0);
    margin: 0px;
    padding: 20px 50px 20px 50px;
    color: black;
    background-color: #F8F8F8;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 10px;
}


#footer {
    margin: 0px;
    color: #999999;
    background-color: #C0C0C0;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 10px;
}

H1 {   
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 40px;

    font-weight: normal;
    height: 67px;
    padding: 0px 0px 0px 20px;
    color: #000066;
    //background-color: white;
    margin: 0em;
    // padding 0em;

}

H1 A {
    color: #000066;
    font-weight: normal;
}

H1 A:hover {
    text-decoration: underline;
}

A {
    color: #999999;
    font-weight: bold;
    text-decoration: none;
}                           

A:hover {
    //color: #CC0000;
    color: #000066;
}                        

// usernav bits copied from classic css

#usernav {
    float: right;
    background-color: transparent;
    display: inline;
    text-align: right;
}

#usernav ul {
    margin: 0;
    padding: 0;
    display: inline;
    list-style: none;
}

#usernav li {
    display: inline;
    margin: 0;
    padding: 0;
}

#usernav li a, #header li a:visited {
    display: inline;
    font-weight: bold;
    padding: 0 1.5em;
    font-size: 0.8em;
}

""" % {"color": color})
    
    </rdf:value>
  </server:PagePartHandler>

  <server:PagePartHandler rdf:ID="navigation">
    <rdf:value rdf:datatype="http://redfoot.net/3.0/server#Kid"><![CDATA[

<div kid:strip="" class="nav" xmlns:kid="http://purl.org/kid/ns#">
<?python
TEMPLATE = redfoot.namespace("http://redfoot.net/3.0/template#")
sections = []
for section in redfoot.objects(request.host, TEMPLATE.section):
    label = redfoot.value(section, TEMPLATE.section_name) or redfoot.label(section)
    comment = redfoot.comment(section)
    try:
        val = redfoot.value(section, TEMPLATE.section_rank)
        if val is None:
            val = redfoot.value(section, TEMPLATE.default_section_rank, any=True)            
        rank = float(val)
    except:
        rank = 0.0
    if allow(section):
        sections.append((rank, label, section, comment))
sections.sort()
?>
  <table id="headerMenu" cellspacing="0px" cellpadding="0px" kid:if="sections">
    <tr>
      <td class="menuItem" width="120">&#160;</td>
      <td class="smallVerticalSpacer"></td>

        <span kid:strip="" kid:for="rank, label, section, comment in sections">
        <td class="menuItem">
        <a class="menuItemLink" href="${section}" title="${comment}" id="${section==request.uri and 'current' or None}">${label}</a>
        </td>
        <td class="smallVerticalSpacer"></td>
        </span>
            
      
      <td class="smallVerticalSpacer"></td>
      <td class="menuItem" width="120">&#160;</td>                  
    </tr>
  </table>

</div>
    
      ]]></rdf:value>
  </server:PagePartHandler>

  <rdf:Description rdf:about="http://redfoot.net/3.0/redfoot#Globals">
    <commands:config>
      <redfoot:Configuration rdf:ID="quant_config">    
        <commands:command rdf:resource="#update_symbols"/>                
        <commands:command rdf:resource="#certus"/>                
        <commands:command rdf:resource="#strategies"/>                
      </redfoot:Configuration>
    </commands:config>
  </rdf:Description>

  <commands:Command rdf:ID="update_symbols">
    <rdfs:label>update_symbols</rdfs:label>
    <redfoot:code>
     <redfoot:Python rdf:ID="update_symbols_code">
        <rdfs:label>Update Symbols</rdfs:label>
      <rdf:value rdf:datatype="http://redfoot.net/3.0/redfoot#Python">
<![CDATA[

import logging

_logger = logging.getLogger(redfoot_current)

import urllib2
import csv

from rdflib import Namespace

QUANT = Namespace(URIRef("quant#", base=redfoot.base))

def unicode_csv_reader(f, dialect=csv.excel, encoding="latin-1", **kwargs):
    # csv.py doesn't do Unicode; encode temporarily as UTF-8:
    for row in csv.reader(f, dialect=dialect, **kwargs):
        # decode "encoding" back to Unicode, cell by cell:
        yield [unicode(cell, encoding) for cell in row]
csv.unicode_reader = unicode_csv_reader


c = redfoot.get_context(URIRef("#symbols", base=redfoot.base))
c.remove((None, None, None))

def update(exchange, url):
    f = urllib2.urlopen(url)
    # "Description of file", "", "", ""
    _logger.debug("ignoring first line: %s" % f.readline() )
    # "Name","Symbol","Market Value (millions)","Description (as filed with the SEC)"
    # "Name","Symbol","Market Value (millions)","Shares Outstanding","Description (as filed with the SEC)"
    _logger.debug("ignoring second line: %s" % f.readline() )
    for row in csv.unicode_reader(f):
        if len(row)==4:        
            name, symbol, market_value, description = row
        elif len(row)==5:
            name, symbol, market_value, _, description = row
        else:
            _logger.warning("Row does not have 4 or 5 items: %s" % str(row))
            continue
        uri = URIRef("ticker#%s" % symbol.replace("/", "_"), base=redfoot.base)
        c.add((uri, RDF.type, QUANT.Stock))
        c.add((uri, QUANT.symbol, Literal(symbol)))
        c.add((uri, RDFS.label, Literal(name)))
        c.add((uri, RDFS.comment, Literal(description)))
        c.add((uri, QUANT.market_value, Literal(market_value)))
        c.add((uri, QUANT.exchange, Literal(exchange)))

    f.close()

update("Nasdaq", "http://www.nasdaq.com/asp/symbols.asp?exchange=Q&start=0")
update("NYSE", "http://www.nasdaq.com/asp/symbols.asp?exchange=N&start=0")
#update("OTCBB", "http://www.nasdaq.com/asp/symbols.asp?exchange=O&start=0")
#update("AMEX", "http://www.nasdaq.com/asp/symbols.asp?exchange=1&start=0")

_logger.info("Symbols updated")

]]>
      </rdf:value>
     </redfoot:Python>
    </redfoot:code>
  </commands:Command>

  <commands:Command rdf:ID="certus">
    <rdfs:label>certus</rdfs:label>
    <redfoot:code>
     <redfoot:Python rdf:ID="certus_code">
        <rdfs:label>certus code</rdfs:label>
      <rdf:value rdf:datatype="http://redfoot.net/3.0/redfoot#Python">
<![CDATA[

import logging
_logger = logging.getLogger(redfoot_current)

from twisted.internet import protocol
from twisted.internet import reactor


class CertusPP(protocol.ProcessProtocol):
    def __init__(self, action=None):
        self.data = ""
        self.action = action

    def connectionMade(self):
        _logger.debug("connectionMade!")
        #self.transport.write("send to process")
        self.transport.closeStdin() # tell them we're done

    def outReceived(self, data):
        self.data = self.data + data

    def errReceived(self, data):
        _logger.debug("CertusPP stderr: %s" % data)

    def inConnectionLost(self):
        _logger.debug("inConnectionLost! stdin is closed! (we probably did it)")

    def outConnectionLost(self):
        _logger.debug("outConnectionLost! The child closed their stdout!")

    def errConnectionLost(self):
        _logger.debug("errConnectionLost! The child closed their stderr.")

    def processEnded(self, status_object):
        _logger.debug("process ended")
        if self.action: # TODO: only call action on successful run
            try:
                _logger.debug("calling action: %s with: %s" % (self.action, self.data))
                self.action(self.data)
            except Exception, e:
                _logger.exception(e)
        else:
            self.redfoot.write(self.data)
            _logger.debug("processEnded, status %d" % status_object.value.exitCode)


from os.path import abspath

if "action" not in locals():
    action = None
_logger.debug("action: %s" % action)
pp = CertusPP(action)
executable = abspath("Certus.sh")
reactor.spawnProcess(pp, executable, [executable] + args, env={})

]]>
      </rdf:value>
     </redfoot:Python>
    </redfoot:code>
  </commands:Command>

  <rdf:Description rdf:ID="cci">
    <rdf:type rdf:resource="/quant#TechnicalTradingStrategy"/>
    <rdfs:label>cci</rdfs:label>
    <redfoot:code> <!-- TODO: -->
      <redfoot:Python rdf:ID="cci_code">
        <rdfs:label>cci code</rdfs:label>
      <rdf:value rdf:datatype="http://redfoot.net/3.0/redfoot#Python">
<![CDATA[

import logging

_logger = logging.getLogger(redfoot_current)

_logger.exception("Runing CCI strategy")

from rdflib import Namespace
QUANT = Namespace(URIRef("/quant#", base=redfoot.base))

import csv, time, md5
from StringIO import StringIO

def process_cci_results(data):
    sio = StringIO(data)
    for row in csv.reader(sio):
        trade_type, symbol, cci, stock_price, date, num_periods, cci_exit_value, max_loss = row
        stock = redfoot.value(predicate=QUANT.symbol, object=Literal(symbol))
         # see if we have a trade for this stock            
        trade = redfoot.value(predicate=QUANT.underlyingInstrument, object=stock)
        if trade:
            redfoot.xmpp.send(REDFOOT.Admin, "Update on trade: %s ( %s )" % (trade.concrete(), row))
        else:
            # TODO: different URI?
            trade = URIRef("trade#%s" % md5.new("%s" % time.time()).hexdigest(), base=redfoot.base)
            c = redfoot.get_context(redfoot.context_id(trade, context_id="context"))
            c.add((trade, RDF.type, QUANT.CertisRecommendedTrade))
            c.add((trade, RDF.type, QUANT.CCITrade))
            c.add((trade, QUANT.tradeType, Literal(trade_type)))
            c.add((trade, QUANT.underlyingInstrument, stock))
            c.add((trade, QUANT.underlyingPriceWhenRecommended, Literal(stock_price)))
            c.add((trade, QUANT.tradeRecommendedAt, Literal(date)))
            c.add((trade, QUANT.numPeriodsCCI, Literal(num_periods)))
            c.add((trade, QUANT.recommendedCCIForExit, Literal(cci_exit_value)))
            c.add((trade, QUANT.maxLossAllowed, Literal(max_loss)))
            redfoot.xmpp.send(REDFOOT.Admin, "Recommended trade: %s ( %s )" % (trade.concrete(), row))

for basket in redfoot.subjects(RDF.type, QUANT.Basket):
    arg_string = "-s cci -b %s?content-type=text/csv" % basket.concrete()
    args = arg_string.split()
    redfoot.execute(URIRef("#certus_code", base=redfoot.base), args=args, action=process_cci_results) 

]]>
      </rdf:value>
     </redfoot:Python>
    </redfoot:code>
  </rdf:Description>

  <commands:Command rdf:ID="strategies">
    <rdfs:label>strategies</rdfs:label>
    <redfoot:code>
     <redfoot:Python rdf:ID="strategies_code">
        <rdfs:label>stragegies code</rdfs:label>
      <rdf:value rdf:datatype="http://redfoot.net/3.0/redfoot#Python">
<![CDATA[
import logging

_logger = logging.getLogger(redfoot_current)

from twisted.internet import task

from optparse import OptionParser
parser = OptionParser("""
a temporary way for us to kick off the strategies main loop.""")
parser.add_option("--stop", action="store_true", dest="stop", help="stop the strategies main loop")
parser.set_defaults(stop=False)

try:
    options, args = parser.parse_args(args)
    done = False
except SystemExit, e:
    done = True


def main():
    _logger.info("Running strategies")
    try:
        redfoot.execute(URIRef("#cci_code", base=redfoot.base))
    except Exception, e:
        _logger.exception(e)
    _logger.info("done running strategies")

if not done:
    
    if not hasattr(redfoot, "_strategies_main"):
        import new
        strat = redfoot._strategies_main = new.module("strategies")
        strat.l = None
    else:
        strat = redfoot._strategies_main

    if options.stop:
        _logger.info("requesting strategies loop to stop")
        if strat.l:
            strat.l.stop()
    else:
        if strat.l is None:
            _logger.info("requesting strategies loop to start")
            strat.l = task.LoopingCall(main)
            strat.l.start(30.0)
        else:
            _logger.info("strategies main loop already running. Restarting.")
            try:
                strat.l.stop()
            except Exception, e:
                _logger.exception(e)
            strat.l = task.LoopingCall(main) # create a new LoopingCall
            strat.l.start(30.0)

]]>
      </rdf:value>
     </redfoot:Python>
    </redfoot:code>
  </commands:Command>

  <quant:Basket rdf:about="basket#dow">
    <rdfs:label>DOW</rdfs:label>
    <quant:basketItem rdf:resource="/ticker#MMM"/>
    <quant:basketItem rdf:resource="/ticker#T"/>
    <quant:basketItem rdf:resource="/ticker#AA"/>
    <quant:basketItem rdf:resource="/ticker#MO"/>
    <quant:basketItem rdf:resource="/ticker#AIG"/>
    <quant:basketItem rdf:resource="/ticker#AXP"/>
    <quant:basketItem rdf:resource="/ticker#BA"/>
    <quant:basketItem rdf:resource="/ticker#CAT"/>
    <quant:basketItem rdf:resource="/ticker#C"/>
    <quant:basketItem rdf:resource="/ticker#KO"/>
    <quant:basketItem rdf:resource="/ticker#DIS"/>
    <quant:basketItem rdf:resource="/ticker#DD"/>
    <quant:basketItem rdf:resource="/ticker#XOM"/>
    <quant:basketItem rdf:resource="/ticker#GE"/>
    <quant:basketItem rdf:resource="/ticker#GM"/>
    <quant:basketItem rdf:resource="/ticker#HPQ"/>
    <quant:basketItem rdf:resource="/ticker#HD"/>
    <quant:basketItem rdf:resource="/ticker#HON"/>
    <quant:basketItem rdf:resource="/ticker#IBM"/>
    <quant:basketItem rdf:resource="/ticker#INTC"/>
    <quant:basketItem rdf:resource="/ticker#JNJ"/>
    <quant:basketItem rdf:resource="/ticker#JPM"/>
    <quant:basketItem rdf:resource="/ticker#MCD"/>
    <quant:basketItem rdf:resource="/ticker#MRK"/>
    <quant:basketItem rdf:resource="/ticker#MSFT"/>
    <quant:basketItem rdf:resource="/ticker#PFE"/>
    <quant:basketItem rdf:resource="/ticker#PG"/>
    <quant:basketItem rdf:resource="/ticker#UTX"/>
    <quant:basketItem rdf:resource="/ticker#VZ"/>
    <quant:basketItem rdf:resource="/ticker#WMT"/>
  </quant:Basket>

</rdf:RDF>
